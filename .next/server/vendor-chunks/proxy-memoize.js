"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/proxy-memoize";
exports.ids = ["vendor-chunks/proxy-memoize"];
exports.modules = {

/***/ "(ssr)/./node_modules/proxy-memoize/dist/memoize.js":
/*!****************************************************!*\
  !*** ./node_modules/proxy-memoize/dist/memoize.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   memoize: () => (/* binding */ memoize)\n/* harmony export */ });\n/* harmony import */ var proxy_compare__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! proxy-compare */ \"(ssr)/./node_modules/proxy-compare/dist/index.js\");\n\n// This is required only for performance.\n// https://github.com/dai-shi/proxy-memoize/issues/68\nconst targetCache = new WeakMap();\n// constants from proxy-compare\nconst HAS_KEY_PROPERTY = 'h';\nconst ALL_OWN_KEYS_PROPERTY = 'w';\nconst HAS_OWN_KEY_PROPERTY = 'o';\nconst KEYS_PROPERTY = 'k';\nconst trackMemoUntrackedObjSet = new WeakSet();\nconst isObject = (x) => typeof x === 'object' && x !== null;\nconst untrack = (x, seen) => {\n    if (!isObject(x))\n        return x;\n    const untrackedObj = (0,proxy_compare__WEBPACK_IMPORTED_MODULE_0__.getUntracked)(x);\n    if (untrackedObj) {\n        (0,proxy_compare__WEBPACK_IMPORTED_MODULE_0__.trackMemo)(x);\n        trackMemoUntrackedObjSet.add(untrackedObj);\n        return untrackedObj;\n    }\n    if (!seen.has(x)) {\n        seen.add(x);\n        Object.entries(x).forEach(([k, v]) => {\n            const vv = untrack(v, seen);\n            if (!Object.is(vv, v))\n                x[k] = vv;\n        });\n    }\n    return x;\n};\nconst touchAffected = (dst, src, affected) => {\n    var _a, _b, _c;\n    if (!isObject(dst) || !isObject(src))\n        return;\n    const untrackedObj = (0,proxy_compare__WEBPACK_IMPORTED_MODULE_0__.getUntracked)(src);\n    const used = affected.get(untrackedObj || src);\n    if (!used) {\n        if (trackMemoUntrackedObjSet.has(untrackedObj)) {\n            (0,proxy_compare__WEBPACK_IMPORTED_MODULE_0__.trackMemo)(dst);\n        }\n        return;\n    }\n    (_a = used[HAS_KEY_PROPERTY]) === null || _a === void 0 ? void 0 : _a.forEach((key) => {\n        Reflect.has(dst, key);\n    });\n    if (used[ALL_OWN_KEYS_PROPERTY] === true) {\n        Reflect.ownKeys(dst);\n    }\n    (_b = used[HAS_OWN_KEY_PROPERTY]) === null || _b === void 0 ? void 0 : _b.forEach((key) => {\n        Reflect.getOwnPropertyDescriptor(dst, key);\n    });\n    (_c = used[KEYS_PROPERTY]) === null || _c === void 0 ? void 0 : _c.forEach((key) => {\n        touchAffected(dst[key], src[key], affected);\n    });\n};\nconst isOriginalEqual = (x, y) => {\n    for (let xx = x; xx; x = xx, xx = (0,proxy_compare__WEBPACK_IMPORTED_MODULE_0__.getUntracked)(xx))\n        ;\n    for (let yy = y; yy; y = yy, yy = (0,proxy_compare__WEBPACK_IMPORTED_MODULE_0__.getUntracked)(yy))\n        ;\n    return Object.is(x, y);\n};\n// properties\nconst OBJ_PROPERTY = 'o';\nconst RESULT_PROPERTY = 'r';\nconst AFFECTED_PROPERTY = 'a';\n/**\n * Create a memoized function\n *\n * @example\n * import { memoize } from 'proxy-memoize';\n *\n * const fn = memoize(obj => ({ sum: obj.a + obj.b, diff: obj.a - obj.b }));\n *\n * @param options\n * @param options.size - (default: 1)\n * @param options.noWeakMap - disable tier-1 cache (default: false)\n */\nfunction memoize(fn, options) {\n    var _a;\n    let memoListHead = 0;\n    const size = (_a = options === null || options === void 0 ? void 0 : options.size) !== null && _a !== void 0 ? _a : 1;\n    const memoList = [];\n    const resultCache = (options === null || options === void 0 ? void 0 : options.noWeakMap) ? null : new WeakMap();\n    const memoizedFn = (obj) => {\n        const cache = resultCache === null || resultCache === void 0 ? void 0 : resultCache.get(obj);\n        if (cache) {\n            return cache;\n        }\n        for (let i = 0; i < size; i += 1) {\n            const memo = memoList[(memoListHead + i) % size];\n            if (!memo)\n                break;\n            const { [OBJ_PROPERTY]: memoObj, [AFFECTED_PROPERTY]: memoAffected, [RESULT_PROPERTY]: memoResult, } = memo;\n            if (!(0,proxy_compare__WEBPACK_IMPORTED_MODULE_0__.isChanged)(memoObj, obj, memoAffected, new WeakMap(), isOriginalEqual)) {\n                touchAffected(obj, memoObj, memoAffected);\n                resultCache === null || resultCache === void 0 ? void 0 : resultCache.set(obj, memoResult);\n                return memoResult;\n            }\n        }\n        const affected = new WeakMap();\n        const proxy = (0,proxy_compare__WEBPACK_IMPORTED_MODULE_0__.createProxy)(obj, affected, undefined, targetCache);\n        const result = untrack(fn(proxy), new WeakSet());\n        touchAffected(obj, obj, affected);\n        const entry = {\n            [OBJ_PROPERTY]: obj,\n            [RESULT_PROPERTY]: result,\n            [AFFECTED_PROPERTY]: affected,\n        };\n        memoListHead = (memoListHead - 1 + size) % size;\n        memoList[memoListHead] = entry;\n        resultCache === null || resultCache === void 0 ? void 0 : resultCache.set(obj, result);\n        return result;\n    };\n    return memoizedFn;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcHJveHktbWVtb2l6ZS9kaXN0L21lbW9pemUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBZ0Y7QUFDaEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsMkRBQVk7QUFDckM7QUFDQSxRQUFRLHdEQUFTO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QiwyREFBWTtBQUNyQztBQUNBO0FBQ0E7QUFDQSxZQUFZLHdEQUFTO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxxQkFBcUIsSUFBSSxhQUFhLDJEQUFZO0FBQ2xEO0FBQ0EscUJBQXFCLElBQUksYUFBYSwyREFBWTtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxVQUFVO0FBQ3RCO0FBQ0EsZ0NBQWdDLHlDQUF5QztBQUN6RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixVQUFVO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiw2RkFBNkY7QUFDakgsaUJBQWlCLHdEQUFTO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiwwREFBVztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvaG9tZS9zYXJhaC9EZXNrdG9wL0tlbm5ldGgvdWIvbm9kZV9tb2R1bGVzL3Byb3h5LW1lbW9pemUvZGlzdC9tZW1vaXplLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZVByb3h5LCBpc0NoYW5nZWQsIGdldFVudHJhY2tlZCwgdHJhY2tNZW1vIH0gZnJvbSAncHJveHktY29tcGFyZSc7XG4vLyBUaGlzIGlzIHJlcXVpcmVkIG9ubHkgZm9yIHBlcmZvcm1hbmNlLlxuLy8gaHR0cHM6Ly9naXRodWIuY29tL2RhaS1zaGkvcHJveHktbWVtb2l6ZS9pc3N1ZXMvNjhcbmNvbnN0IHRhcmdldENhY2hlID0gbmV3IFdlYWtNYXAoKTtcbi8vIGNvbnN0YW50cyBmcm9tIHByb3h5LWNvbXBhcmVcbmNvbnN0IEhBU19LRVlfUFJPUEVSVFkgPSAnaCc7XG5jb25zdCBBTExfT1dOX0tFWVNfUFJPUEVSVFkgPSAndyc7XG5jb25zdCBIQVNfT1dOX0tFWV9QUk9QRVJUWSA9ICdvJztcbmNvbnN0IEtFWVNfUFJPUEVSVFkgPSAnayc7XG5jb25zdCB0cmFja01lbW9VbnRyYWNrZWRPYmpTZXQgPSBuZXcgV2Vha1NldCgpO1xuY29uc3QgaXNPYmplY3QgPSAoeCkgPT4gdHlwZW9mIHggPT09ICdvYmplY3QnICYmIHggIT09IG51bGw7XG5jb25zdCB1bnRyYWNrID0gKHgsIHNlZW4pID0+IHtcbiAgICBpZiAoIWlzT2JqZWN0KHgpKVxuICAgICAgICByZXR1cm4geDtcbiAgICBjb25zdCB1bnRyYWNrZWRPYmogPSBnZXRVbnRyYWNrZWQoeCk7XG4gICAgaWYgKHVudHJhY2tlZE9iaikge1xuICAgICAgICB0cmFja01lbW8oeCk7XG4gICAgICAgIHRyYWNrTWVtb1VudHJhY2tlZE9ialNldC5hZGQodW50cmFja2VkT2JqKTtcbiAgICAgICAgcmV0dXJuIHVudHJhY2tlZE9iajtcbiAgICB9XG4gICAgaWYgKCFzZWVuLmhhcyh4KSkge1xuICAgICAgICBzZWVuLmFkZCh4KTtcbiAgICAgICAgT2JqZWN0LmVudHJpZXMoeCkuZm9yRWFjaCgoW2ssIHZdKSA9PiB7XG4gICAgICAgICAgICBjb25zdCB2diA9IHVudHJhY2sodiwgc2Vlbik7XG4gICAgICAgICAgICBpZiAoIU9iamVjdC5pcyh2diwgdikpXG4gICAgICAgICAgICAgICAgeFtrXSA9IHZ2O1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIHg7XG59O1xuY29uc3QgdG91Y2hBZmZlY3RlZCA9IChkc3QsIHNyYywgYWZmZWN0ZWQpID0+IHtcbiAgICB2YXIgX2EsIF9iLCBfYztcbiAgICBpZiAoIWlzT2JqZWN0KGRzdCkgfHwgIWlzT2JqZWN0KHNyYykpXG4gICAgICAgIHJldHVybjtcbiAgICBjb25zdCB1bnRyYWNrZWRPYmogPSBnZXRVbnRyYWNrZWQoc3JjKTtcbiAgICBjb25zdCB1c2VkID0gYWZmZWN0ZWQuZ2V0KHVudHJhY2tlZE9iaiB8fCBzcmMpO1xuICAgIGlmICghdXNlZCkge1xuICAgICAgICBpZiAodHJhY2tNZW1vVW50cmFja2VkT2JqU2V0Lmhhcyh1bnRyYWNrZWRPYmopKSB7XG4gICAgICAgICAgICB0cmFja01lbW8oZHN0KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIChfYSA9IHVzZWRbSEFTX0tFWV9QUk9QRVJUWV0pID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5mb3JFYWNoKChrZXkpID0+IHtcbiAgICAgICAgUmVmbGVjdC5oYXMoZHN0LCBrZXkpO1xuICAgIH0pO1xuICAgIGlmICh1c2VkW0FMTF9PV05fS0VZU19QUk9QRVJUWV0gPT09IHRydWUpIHtcbiAgICAgICAgUmVmbGVjdC5vd25LZXlzKGRzdCk7XG4gICAgfVxuICAgIChfYiA9IHVzZWRbSEFTX09XTl9LRVlfUFJPUEVSVFldKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IuZm9yRWFjaCgoa2V5KSA9PiB7XG4gICAgICAgIFJlZmxlY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGRzdCwga2V5KTtcbiAgICB9KTtcbiAgICAoX2MgPSB1c2VkW0tFWVNfUFJPUEVSVFldKSA9PT0gbnVsbCB8fCBfYyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2MuZm9yRWFjaCgoa2V5KSA9PiB7XG4gICAgICAgIHRvdWNoQWZmZWN0ZWQoZHN0W2tleV0sIHNyY1trZXldLCBhZmZlY3RlZCk7XG4gICAgfSk7XG59O1xuY29uc3QgaXNPcmlnaW5hbEVxdWFsID0gKHgsIHkpID0+IHtcbiAgICBmb3IgKGxldCB4eCA9IHg7IHh4OyB4ID0geHgsIHh4ID0gZ2V0VW50cmFja2VkKHh4KSlcbiAgICAgICAgO1xuICAgIGZvciAobGV0IHl5ID0geTsgeXk7IHkgPSB5eSwgeXkgPSBnZXRVbnRyYWNrZWQoeXkpKVxuICAgICAgICA7XG4gICAgcmV0dXJuIE9iamVjdC5pcyh4LCB5KTtcbn07XG4vLyBwcm9wZXJ0aWVzXG5jb25zdCBPQkpfUFJPUEVSVFkgPSAnbyc7XG5jb25zdCBSRVNVTFRfUFJPUEVSVFkgPSAncic7XG5jb25zdCBBRkZFQ1RFRF9QUk9QRVJUWSA9ICdhJztcbi8qKlxuICogQ3JlYXRlIGEgbWVtb2l6ZWQgZnVuY3Rpb25cbiAqXG4gKiBAZXhhbXBsZVxuICogaW1wb3J0IHsgbWVtb2l6ZSB9IGZyb20gJ3Byb3h5LW1lbW9pemUnO1xuICpcbiAqIGNvbnN0IGZuID0gbWVtb2l6ZShvYmogPT4gKHsgc3VtOiBvYmouYSArIG9iai5iLCBkaWZmOiBvYmouYSAtIG9iai5iIH0pKTtcbiAqXG4gKiBAcGFyYW0gb3B0aW9uc1xuICogQHBhcmFtIG9wdGlvbnMuc2l6ZSAtIChkZWZhdWx0OiAxKVxuICogQHBhcmFtIG9wdGlvbnMubm9XZWFrTWFwIC0gZGlzYWJsZSB0aWVyLTEgY2FjaGUgKGRlZmF1bHQ6IGZhbHNlKVxuICovXG5leHBvcnQgZnVuY3Rpb24gbWVtb2l6ZShmbiwgb3B0aW9ucykge1xuICAgIHZhciBfYTtcbiAgICBsZXQgbWVtb0xpc3RIZWFkID0gMDtcbiAgICBjb25zdCBzaXplID0gKF9hID0gb3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLnNpemUpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IDE7XG4gICAgY29uc3QgbWVtb0xpc3QgPSBbXTtcbiAgICBjb25zdCByZXN1bHRDYWNoZSA9IChvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMubm9XZWFrTWFwKSA/IG51bGwgOiBuZXcgV2Vha01hcCgpO1xuICAgIGNvbnN0IG1lbW9pemVkRm4gPSAob2JqKSA9PiB7XG4gICAgICAgIGNvbnN0IGNhY2hlID0gcmVzdWx0Q2FjaGUgPT09IG51bGwgfHwgcmVzdWx0Q2FjaGUgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHJlc3VsdENhY2hlLmdldChvYmopO1xuICAgICAgICBpZiAoY2FjaGUpIHtcbiAgICAgICAgICAgIHJldHVybiBjYWNoZTtcbiAgICAgICAgfVxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNpemU7IGkgKz0gMSkge1xuICAgICAgICAgICAgY29uc3QgbWVtbyA9IG1lbW9MaXN0WyhtZW1vTGlzdEhlYWQgKyBpKSAlIHNpemVdO1xuICAgICAgICAgICAgaWYgKCFtZW1vKVxuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY29uc3QgeyBbT0JKX1BST1BFUlRZXTogbWVtb09iaiwgW0FGRkVDVEVEX1BST1BFUlRZXTogbWVtb0FmZmVjdGVkLCBbUkVTVUxUX1BST1BFUlRZXTogbWVtb1Jlc3VsdCwgfSA9IG1lbW87XG4gICAgICAgICAgICBpZiAoIWlzQ2hhbmdlZChtZW1vT2JqLCBvYmosIG1lbW9BZmZlY3RlZCwgbmV3IFdlYWtNYXAoKSwgaXNPcmlnaW5hbEVxdWFsKSkge1xuICAgICAgICAgICAgICAgIHRvdWNoQWZmZWN0ZWQob2JqLCBtZW1vT2JqLCBtZW1vQWZmZWN0ZWQpO1xuICAgICAgICAgICAgICAgIHJlc3VsdENhY2hlID09PSBudWxsIHx8IHJlc3VsdENhY2hlID09PSB2b2lkIDAgPyB2b2lkIDAgOiByZXN1bHRDYWNoZS5zZXQob2JqLCBtZW1vUmVzdWx0KTtcbiAgICAgICAgICAgICAgICByZXR1cm4gbWVtb1Jlc3VsdDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBjb25zdCBhZmZlY3RlZCA9IG5ldyBXZWFrTWFwKCk7XG4gICAgICAgIGNvbnN0IHByb3h5ID0gY3JlYXRlUHJveHkob2JqLCBhZmZlY3RlZCwgdW5kZWZpbmVkLCB0YXJnZXRDYWNoZSk7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHVudHJhY2soZm4ocHJveHkpLCBuZXcgV2Vha1NldCgpKTtcbiAgICAgICAgdG91Y2hBZmZlY3RlZChvYmosIG9iaiwgYWZmZWN0ZWQpO1xuICAgICAgICBjb25zdCBlbnRyeSA9IHtcbiAgICAgICAgICAgIFtPQkpfUFJPUEVSVFldOiBvYmosXG4gICAgICAgICAgICBbUkVTVUxUX1BST1BFUlRZXTogcmVzdWx0LFxuICAgICAgICAgICAgW0FGRkVDVEVEX1BST1BFUlRZXTogYWZmZWN0ZWQsXG4gICAgICAgIH07XG4gICAgICAgIG1lbW9MaXN0SGVhZCA9IChtZW1vTGlzdEhlYWQgLSAxICsgc2l6ZSkgJSBzaXplO1xuICAgICAgICBtZW1vTGlzdFttZW1vTGlzdEhlYWRdID0gZW50cnk7XG4gICAgICAgIHJlc3VsdENhY2hlID09PSBudWxsIHx8IHJlc3VsdENhY2hlID09PSB2b2lkIDAgPyB2b2lkIDAgOiByZXN1bHRDYWNoZS5zZXQob2JqLCByZXN1bHQpO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH07XG4gICAgcmV0dXJuIG1lbW9pemVkRm47XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/proxy-memoize/dist/memoize.js\n");

/***/ })

};
;